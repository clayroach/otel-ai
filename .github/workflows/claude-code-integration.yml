name: Claude Code Architectural Review

on:
  # Trigger on PR comments for @claude mentions
  issue_comment:
    types: [created]

  # Trigger on pull requests for automated architectural review
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths-ignore:
      - 'notes/**'
      - 'blog/**'
      - '*.md'
      - 'docs/**'

  # Manual workflow dispatch for Claude commands
  workflow_dispatch:
    inputs:
      claude_command:
        description: 'Claude command to run'
        required: false
        default: '/review'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8.15.0'

jobs:
  # Claude Code integration for PR review and assistance
  claude-assistant:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write  # Required for OIDC authentication
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened')) ||
      github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          # Fetch full history for better context
          fetch-depth: 0
          
      - name: Claude Code Architectural Review (on PR open)
        if: github.event_name == 'pull_request'
        id: claude-review
        continue-on-error: true
        timeout-minutes: 10
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          claude_args: |
            --max-turns 5
            --model claude-3-5-haiku-20241022
            --allowedTools "mcp__github_inline_comment__create_inline_comment,Bash(gh:*),Bash(grep:*),Read"
          prompt: |
            Review PR #${{ github.event.pull_request.number }} and post inline comments for violations.

            TASK: Post inline comments for these specific violations ONLY, then STOP:

            1. Lines with "from '@clickhouse/client'" ‚Üí Comment: "üö® HIGH: Direct ClickHouse import. Use StorageServiceTag from storage/services instead."
            2. Lines with "createClient" ‚Üí Comment: "üö® HIGH: Direct client creation. Use StorageServiceTag dependency injection."
            3. Lines with SQL keywords (SELECT, INSERT, UPDATE, DELETE, CREATE TABLE) ‚Üí Comment: "üö® HIGH: Raw SQL outside storage. Use storage service methods."
            4. Files ending in .test.ts outside /test/ directories ‚Üí Comment: "‚ö†Ô∏è MEDIUM: Test file in wrong location. Move to test/ subdirectory."

            PROCESS:
            1. Use: gh pr diff ${{ github.event.pull_request.number }} --name-only
            2. Read ONLY the first 5 changed files to avoid timeout
            3. Post comments using mcp__github_inline_comment__create_inline_comment
            4. STOP after posting comments - do not continue analyzing

            CRITICAL: Limit to 5 files max. Post comments and exit immediately. Do not loop or continue searching.

      - name: Slack Architectural Review Notification
        if: github.event_name == 'pull_request'
        continue-on-error: true
        uses: ./.github/actions/slack-notify
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: 'warning'
          job-name: 'Claude Code Architectural Review'
          workflow-name: 'PR Architectural Review'
          branch: ${{ github.head_ref || github.ref_name }}
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          commit-author: ${{ github.event.pull_request.user.login || github.actor }}
          pr-number: ${{ github.event.pull_request.number }}
          pr-title: ${{ github.event.pull_request.title }}
          pr-url: ${{ github.event.pull_request.html_url }}
          error-details: |
            üîç **Architectural Review Analysis**

            **PR #${{ github.event.number }}**: ${{ github.event.pull_request.title }}
            **Author**: ${{ github.event.pull_request.user.login }}

            Claude Code has analyzed this PR for architectural patterns:
            - ‚úÖ Service abstraction boundaries
            - ‚úÖ ClickHouse client usage validation
            - ‚úÖ Effect-TS layer compliance check
            - ‚úÖ Storage service integration review

            üìã **Check PR comments for any architectural findings and recommendations.**
          test-results: 'Architectural review completed - check PR comments for findings'

          
      - name: Claude Code Comment Response
        if: github.event_name == 'issue_comment'
        continue-on-error: true
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: ${{ github.event.comment.body }}
          claude_args: "--max-turns 5"
          
      - name: Claude Manual Command
        if: github.event_name == 'workflow_dispatch'
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: ${{ github.event.inputs.claude_command }}
          claude_args: "--max-turns 3"