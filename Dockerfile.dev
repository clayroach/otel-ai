# Multi-stage development container for AI-native observability platform
# Includes all tools needed for TypeScript development, testing, and building

FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    git \
    curl \
    bash \
    make \
    g++ \
    python3 \
    python3-dev \
    py3-pip \
    && rm -rf /var/cache/apk/*

# Set up working directory
WORKDIR /workspace

# Install global development tools
RUN npm install -g \
    pnpm \
    tsx \
    nodemon \
    @types/node \
    typescript \
    vitest \
    prettier \
    eslint

# Development stage with additional tools
FROM base AS development

# Install additional development tools
RUN npm install -g \
    @effect/cli \
    @clickhouse/client \
    @aws-sdk/client-s3

# Set up development environment
ENV NODE_ENV=development
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

# Create non-root user for development
RUN addgroup -g 1000 developer && \
    adduser -u 1000 -G developer -s /bin/bash -D developer && \
    chown -R developer:developer /workspace

USER developer

# Set up shell with useful aliases
RUN echo 'alias ll="ls -la"' >> ~/.bashrc && \
    echo 'alias build="pnpm run build"' >> ~/.bashrc && \
    echo 'alias test="pnpm run test"' >> ~/.bashrc && \
    echo 'alias dev="pnpm run dev"' >> ~/.bashrc

# Default command opens development shell
CMD ["/bin/bash"]

# Build stage for production artifacts
FROM base AS build

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build the application
RUN pnpm run build

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Install only production dependencies
COPY package.json pnpm-lock.yaml ./
RUN npm install -g pnpm && \
    pnpm install --prod --frozen-lockfile

# Copy built application
COPY --from=build /workspace/dist ./dist

# Set production environment
ENV NODE_ENV=production

# Run as non-root user
RUN addgroup -g 1000 app && \
    adduser -u 1000 -G app -s /bin/sh -D app && \
    chown -R app:app /app

USER app

CMD ["node", "dist/index.js"]