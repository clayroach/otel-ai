# Development docker-compose with build container
version: '3.8'

services:
  # Development container with all build tools
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: otel-ai-dev
    volumes:
      - .:/workspace
      - node_modules:/workspace/node_modules
      - pnpm_store:/pnpm
    environment:
      - NODE_ENV=development
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DATABASE=otel
      - CLICKHOUSE_USERNAME=otel
      - CLICKHOUSE_PASSWORD=otel123
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY_ID=otel-ai
      - S3_SECRET_ACCESS_KEY=otel-ai-secret
      - S3_BUCKET=otel-data
      - S3_FORCE_PATH_STYLE=true
    networks:
      - otel-network
    depends_on:
      - clickhouse
      - minio
    stdin_open: true
    tty: true
    command: /bin/bash

  # ClickHouse for analytics storage
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: otel-ai-clickhouse-dev
    ports:
      - '8123:8123' # HTTP interface
      - '9000:9000' # Native interface
    environment:
      CLICKHOUSE_DB: otel
      CLICKHOUSE_USER: otel
      CLICKHOUSE_PASSWORD: otel123
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./docker/clickhouse/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - otel-network
    healthcheck:
      test: ['CMD', 'clickhouse-client', '--query', 'SELECT 1']
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO for S3-compatible object storage
  minio:
    image: minio/minio:latest
    container_name: otel-ai-minio-dev
    ports:
      - '9001:9001' # Console
      - '9010:9000' # API
    environment:
      MINIO_ROOT_USER: otel-ai
      MINIO_ROOT_PASSWORD: otel-ai-secret
      MINIO_CONSOLE_ADDRESS: ':9001'
    volumes:
      - minio_data:/data
    networks:
      - otel-network
    command: server /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 10s
      retries: 3

  # Create MinIO bucket on startup
  minio-bucket:
    image: minio/mc:latest
    container_name: otel-ai-minio-bucket-dev
    depends_on:
      - minio
    networks:
      - otel-network
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 otel-ai otel-ai-secret;
      /usr/bin/mc mb myminio/otel-data || true;
      /usr/bin/mc policy set public myminio/otel-data;
      exit 0;
      "

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-ai-collector-dev
    ports:
      - '4317:4317' # OTLP gRPC receiver
      - '4318:4318' # OTLP HTTP receiver
      - '8888:8888' # Prometheus metrics
    volumes:
      - ./docker/otel-collector/config.yaml:/etc/otelcol-contrib/config.yaml
    networks:
      - otel-network
    depends_on:
      - clickhouse
    command: ['--config=/etc/otelcol-contrib/config.yaml']

networks:
  otel-network:
    driver: bridge

volumes:
  clickhouse_data:
  minio_data:
  node_modules:
  pnpm_store:
