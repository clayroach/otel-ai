# Minimal setup for development - just storage infrastructure
services:
  # ClickHouse for analytics storage
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
    environment:
      CLICKHOUSE_DB: otel
      CLICKHOUSE_USER: otel
      CLICKHOUSE_PASSWORD: otel123
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./docker/clickhouse/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO for S3-compatible object storage
  minio:
    image: minio/minio:latest
    ports:
      - "9001:9001"  # Console
      - "9010:9000"  # API
    environment:
      MINIO_ROOT_USER: otel-ai
      MINIO_ROOT_PASSWORD: otel-ai-secret
      MINIO_CONSOLE_ADDRESS: ":9001"
    volumes:
      - minio_data:/data
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Create MinIO bucket on startup
  minio-bucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 otel-ai otel-ai-secret;
      /usr/bin/mc mb myminio/otel-data;
      /usr/bin/mc policy set public myminio/otel-data;
      exit 0;
      "

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    ports:
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver
      - "8888:8888"  # Prometheus metrics
    volumes:
      - ./docker/otel-collector/config.yaml:/etc/otelcol-contrib/config.yaml
    depends_on:
      - clickhouse
    command: ["--config=/etc/otelcol-contrib/config.yaml"]

volumes:
  clickhouse_data:
  minio_data: