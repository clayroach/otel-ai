{
  "name": "@otel-ai/platform",
  "version": "0.1.0",
  "description": "AI-native observability platform built in 30 days",
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "engines": {
    "node": ">=20.0.0"
  },
  "packageManager": "pnpm@8.15.0",
  "scripts": {
    "build": "pnpm proto:generate && tsc",
    "dev": "tsx --watch src/index.ts",
    "start": "node dist/index.js",
    "test": "vitest",
    "test:coverage": "vitest --coverage",
    "test:coverage:ui": "vitest --coverage --ui",
    "test:coverage:watch": "vitest --coverage --watch",
    "test:integration": "vitest --config vitest.integration.config.ts",
    "test:integration:storage": "vitest run --config vitest.integration.config.ts src/storage/",
    "lint": "eslint . --ext .ts,.tsx --max-warnings 0",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "typecheck": "tsc --noEmit",
    "clean": "rimraf dist",
    "preinstall": "npx only-allow pnpm",
    "prepare": "husky install",
    "pre-commit": "lint-staged",
    "// Infrastructure commands (production mode)": "",
    "infra:up": "docker compose --profile production up -d",
    "infra:down": "docker compose --profile production down",
    "infra:logs": "docker compose --profile production logs -f",
    "infra:reset": "docker compose --profile production down -v && docker compose --profile production up -d",
    "// Database migration commands": "",
    "db:migrate": "docker compose --profile migrate up schema-migrator",
    "db:migrate:build": "docker compose --profile migrate build schema-migrator",
    "db:migrate:reset": "docker compose down -v && pnpm db:migrate",
    "// Development environment": "",
    "dev:up": "docker compose --profile dev up -d",
    "dev:down": "docker compose --profile dev down",
    "dev:logs": "docker compose --profile dev logs -f",
    "dev:reset": "docker compose --profile dev down -v && pnpm dev:up",
    "// Development with JSON encoding": "",
    "dev:up:json": "docker compose --profile dev --profile collector-json up -d",
    "dev:down:json": "docker compose --profile dev --profile collector-json down",
    "dev:logs:json": "docker compose --profile dev --profile collector-json logs -f",
    "// Development with test data": "",
    "dev:up:test": "docker compose --profile dev --profile test-data up -d",
    "dev:down:test": "docker compose --profile dev --profile test-data down",
    "dev:logs:test": "docker compose --profile dev --profile test-data logs -f",
    "// Code generation": "",
    "generate": "tsx scripts/generate-from-specs.ts",
    "generate:storage": "tsx scripts/generate-from-specs.ts storage",
    "// Protobuf code generation": "",
    "proto:generate": "buf generate",
    "proto:clean": "rimraf src/otel-protobuf",
    "proto:rebuild": "pnpm proto:clean && pnpm proto:generate",
    "proto:lint": "buf lint protobuf",
    "proto:format": "buf format protobuf",
    "// OpenTelemetry Demo Integration": "",
    "demo:clone": "tsx scripts/demo-setup.ts clone",
    "demo:setup": "tsx scripts/demo-setup.ts setup",
    "demo:up": "tsx scripts/demo-setup.ts up",
    "demo:down": "tsx scripts/demo-setup.ts down",
    "demo:logs": "tsx scripts/demo-setup.ts logs",
    "demo:clean": "tsx scripts/demo-setup.ts clean",
    "demo:status": "tsx scripts/demo-setup.ts status",
    "demo:validate": "tsx scripts/validate-demo.ts",
    "// Combined workflows": "",
    "setup": "run-s dev:up install",
    "ci": "run-s format:check lint typecheck test",
    "release": "run-s ci build"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.658.0",
    "@bufbuild/protobuf": "^2.7.0",
    "@clickhouse/client": "^1.5.0",
    "@effect/platform": "^0.58.0",
    "@effect/schema": "^0.68.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/exporter-trace-otlp-proto": "^0.203.0",
    "@opentelemetry/otlp-transformer": "^0.52.1",
    "@opentelemetry/resources": "^1.25.0",
    "@opentelemetry/semantic-conventions": "^1.25.0",
    "cors": "^2.8.5",
    "effect": "^3.8.0",
    "express": "^4.19.2"
  },
  "devDependencies": {
    "@bufbuild/buf": "^1.28.1",
    "@bufbuild/protoc-gen-es": "^2.7.0",
    "@testcontainers/clickhouse": "^10.11.0",
    "@testcontainers/minio": "^10.11.0",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/node": "^20.14.0",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "@vitest/coverage-v8": "^2.0.0",
    "chalk": "^5.3.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "husky": "^9.0.0",
    "lint-staged": "^15.2.0",
    "npm-run-all2": "^6.2.0",
    "prettier": "^3.3.0",
    "rimraf": "^5.0.0",
    "testcontainers": "^10.11.0",
    "tsx": "^4.16.0",
    "typescript": "^5.5.0",
    "vitest": "^2.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/clayroach/otel-ai.git"
  },
  "keywords": [
    "observability",
    "opentelemetry",
    "ai",
    "machine-learning",
    "clickhouse",
    "typescript",
    "effect-ts"
  ],
  "author": "Clay Roach",
  "license": "MIT"
}
